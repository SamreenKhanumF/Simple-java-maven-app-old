# This is a basic workflow to help you get started with Actions

name: BasicPL

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

 build:
    runs-on: ubuntu-latest
    steps:
      ##Checkout## 
      - name: Checkout repo on Branch Master
        uses: actions/checkout@v2
      ##Setup JDK##
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      ##Build with maven##
      - name: Build with Maven
        run: mvn clean install --batch-mode --update-snapshots verify
      ##List files##
      - name: Listing files and present working directory
        run: |
          ls -ltr
          pwd
      ##Publishing artifact##
      - name: Upload Build artifact
        uses: actions/upload-artifact@v2
        with:
          name: Jar File
          path: target/*.jar 
          
      ##Code Quality Check#
# Sonar:
#   runs-on: ubuntu-latest
#   steps:
#   #needs: SonarCloud
#   - name: Status
#     run: echo ${{ job.status }}
#     uses: actions/cache@v1
#     with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#   - name: Cache Maven packages
#     uses: actions/cache@v1
#     with:
#          path: ~/.m2
#          #key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#   - name: Build and analyze
#     env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#     run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SamreenKhanumF_simple-java-maven-app      

 SonarCloud:
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v2
     - name: SonarCloud Scan
       run: mvn -B sonar:sonar -Dsonar.projectKey=SamreenKhanumF_simple-java-maven-app -Dsonar.projectName=simple-java-maven-app -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=c9ba03744770a9974227d0441a920bb67cdfdb51
       #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SamreenKhanumF_simple-java-maven-app
       #uses: sonarsource/sonarcloud-github-action@master
       env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        ##JUnit##
     - name: Test with Maven
       run: mvn -B test --file pom.xml
     - name: Generate JaCoCo Badge
       uses: cicirello/jacoco-badge-generator@v2
       with:          
          jacoco-csv-file: target/site/jacoco/jacoco.csv
          badges-directory: .github/JaCoCo
          generate-coverage-badge: true
          coverage-badge-filename: jacoco.svg
          generate-branches-badge: false
          branches-badge-filename: branches.svg
          colors: '#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44'
          intervals: 100 90 80 70 60 0
          on-missing-report: fail
          fail-if-coverage-less-than: 0
          fail-if-branches-less-than: 0
          fail-on-coverage-decrease: false
          fail-on-branches-decrease: false
     - name: Log coverage percentage
       run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"     
     - name: Upload JaCoCo coverage report
       uses: actions/upload-artifact@v2
       with:
          name: jacoco-report
          path: target/site/jacoco/   

     - uses: codecov/codecov-action@v1
       with:
          file: ./**/target/site/jacoco/jacoco.xml
          name: codecov        
     - name: Publish Unit Test Results
       uses: EnricoMi/publish-unit-test-result-action@v1
       if: always()
       with:
          files: target/surefire-reports/*.xml
        
        ##Curl##
 Curl:
  runs-on: ubuntu-latest
  #needs: SonarCloud
  steps:
   - name: Curl
     #run: curl -XGET 'https://sonarcloud.io/api/issues/search?componentKeys={SamreenKhanumF_simple-java-maven-app}&types=BUG,VULNERABILITY,SECURITY_HOTSPOT&severities=CRITICAL,BLOCKER'
     run: |
      curl --location --request GET 'https://sonarcloud.io/api/measures/component?metricKeys=code_smells,coverage,duplicated_lines_density,vulnerabilities,security_hotspots,critical_violations,bugs&component=IamAdonis_simple-java-maven-app'
      JSON.parse(response)
      echo "coverage= ${{ response.coverage }}"

#   - name: fetch the json value
#     run: 
#      $.ajax({
#        dataType:'json'
#        url: "om/api",
#        beforeSend: function(xhr) { 
#      xhr.setRequestHeader("Authorization", "Basic " + btoa("username:password")); 
#    },
#    type: 'POST',
#    dataType: 'json',
#    contentType: 'application/json',
#    processData: false,
#    data: '{"foo":"bar"}',
#    success: function (data) {
#      alert(JSON.stringify(data));
#    },
 #   error: function(){
 #     alert("Cannot get data");
 #   }
#});
     
     #--header 'Authorization: Bearer c9ba03744770a9974227d0441a920bb67cdfdb51'
#Deploy-Dev
 #   runs-on: ubuntu-latest
 #   needs: SonarCloud
 #   steps:
 #   - name: Status
 #    run: echo ${{ job.status }}
 
 #       uses: actions/cache@v1
 #       with:
 #         path: ~/.sonar/cache
 #         key: ${{ runner.os }}-sonar
 #         restore-keys: ${{ runner.os }}-sonar
 #     - name: Cache Maven packages
 #       uses: actions/cache@v1
 #       with:
 #         path: ~/.m2
 #         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
 #         restore-keys: ${{ runner.os }}-m2
 #     - name: Build and analyze
 #       env:
 #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
 #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 #       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SamreenKhanumF_simple-java-maven-app      
